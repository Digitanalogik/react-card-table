resolver ${RESOLVERS} valid=30s ipv6=off;

map "" $backend {
  default ${API_URL};
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

log_format upstreamlog '[$time_local] $http_x_forwarded_for - $remote_user - $server_name  to: $upstream_addr: $request $http_user_agent upstream_response_time $upstream_response_time msec $msec request_time $request_time';

server {

  listen 80 default_server;

  # Reverse proxy API calls to backend
  location /api {

      # Let's not gzip the API data without some sort of security analysis.
      gzip off;

      proxy_http_version 1.1;

      proxy_connect_timeout  60;
      proxy_send_timeout     60;
      proxy_read_timeout     60;
      send_timeout           60;

      proxy_redirect off;
      proxy_ssl_server_name on;

      # Upgrade from HTTP 1.0 to 1.0 - support keepalive
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_cache_bypass $http_upgrade;

      # Required for AWS API Gateway
      proxy_set_header Host $proxy_host;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass $backend;
  }

  # Serve static assets from local directory
  location / {

    gzip on; 
    gzip_types application/json text/plain application/xml application/javascript text/javascript;
    gzip_min_length 1000;            
    gzip_proxied no-cache no-store private expired auth;

    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html =404;
  }
}
